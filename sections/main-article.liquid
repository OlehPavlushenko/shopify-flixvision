{{ 'section-main-blog-post.css' | asset_url | stylesheet_tag }}

{%- liquid
    assign full_width = section.settings.full_width
    assign width = section.settings.width
    assign img_size = section.settings.img_size
    assign content_alignment = section.settings.content_alignment

    assign background_color_cnt = section.settings.bg_color_content | default: 'transparent'
    assign background_color_cmt = section.settings.bg_color_comments | default: 'transparent'
    assign text_color = section.settings.text_color | default: 'inherit'
    assign title_color = section.settings.title_color | default: 'inherit'

    assign pad_top = section.settings.padding_top
    assign pad_bot = section.settings.padding_bottom
-%}

{%- capture styles -%}
    --title-color-main-blog-post: {{ title_color }};
    --text-color-main-blog-post: {{ text_color }};
    --background-color-main-blog-post: {{ background_color_cnt }};
    --background-color-comment-main-blog-post: {{ background_color_cmt }};
    --pad-top-main-blog-post: {{ pad_top }}px;
    --pad-bot-main-blog-post: {{ pad_bot }}px;
    --width-main-blog-post: {{ width }}px;
{%- endcapture -%}

{%- assign styles = styles | strip_newlines -%}

<article
    class="article-template full_width--{{ full_width }} content--{{ content_alignment }}"
    style="{{ styles }}"
    itemscope
    itemtype="http://schema.org/BlogPosting"
>
    {%- for block in section.blocks -%}
        {%- case block.type -%}
            {%- when '@app' -%}
                <div class="container">
                    {% render block %}
                </div>
            {%- when 'featured_image' -%}
                {%- if article.image -%}
                    <div class="article-template__hero-container container" {{ block.shopify_attributes }}>
                        <picture class="article-template__media media__size--{{ img_size }} media">
                            {% render 'image',
                                image_box: article.image,
                                image_box_class: 'article-template__media--image'
                            %}
                        </picture>
                    </div>
                {%- endif -%}

            {%- when 'title' -%}
                <header class="article-template__head container" {{ block.shopify_attributes }}>
                    <h1 class="article-template__title" itemprop="headline">{{ article.title | escape }}</h1>
                    {%- if block.settings.blog_show_date -%}
                        <span
                            class="divider caption-with-letter-spacing"
                            itemprop="dateCreated pubdate datePublished"
                        >
                            {{- article.published_at | time_tag: format: 'date' -}}
                        </span>
                    {%- endif -%}
                    {%- if block.settings.blog_show_author -%}
                        <span
                            class="caption-with-letter-spacing"
                            itemprop="author"
                            itemscope
                            itemtype="http://schema.org/Person"
                        >
                            <span itemprop="name">{{ article.author }}</span>
                        </span>
                    {%- endif -%}
                    {%- if article.tags.size > 0 -%}
                        <ul class="article-template__tags">
                            {%- liquid
                                assign tags_link = canonical_url
                                if tags_link contains 'tagged'
                                    assign tags_link = tags_link | split: 'tagged/'

                                    if tags_link_state != 'false'
                                        assign tags_current = tags_current | append: tags_link[1] | append: '+'
                                    endif
                                endif
                            %}

                            {% for tag in article.tags %}
                                {% unless tag contains 'state-' %}
                                    <li class="article-template__tags--item">
                                        {% if current_tags contains tag %}
                                            <span class="article-template__tags--link utility current">{{ tag }}</span>
                                        {% else %}
                                            <a
                                                class="article-template__tags--link utility"
                                                href="{{ blog.url }}/tagged/{{ tags_current }}{{ tag | handle }}"
                                            >
                                                {{- tag -}}
                                            </a>
                                        {% endif %}
                                    </li>
                                {% endunless %}
                            {% endfor %}
                        </ul>
                    {%- endif -%}
                </header>

            {%- when 'content' -%}
                <div
                    class="article-template__content container rte"
                    itemprop="articleBody"
                    {{ block.shopify_attributes }}
                >
                    {{ article.content }}
                </div>

            {%- when 'share' -%}
                <div
                    class="article-template__social-sharing container"
                    {{ block.shopify_attributes }}
                >
                    {% assign share_url = request.origin | append: article.url %}
                    <ul class="social-sharing list-social list-unstyled">
                        <li>{{ 'blogs.article.share' | t }}:</li>
                        {% render 'social-sharing',
                            share_title: article.title,
                            share_permalink: article.url,
                            share_image: article.image
                        %}
                    </ul>
                </div>
        {%- endcase -%}
    {%- endfor -%}

    <div class="article-template__back element-margin-top container">
        <div class="return-btn">
            <a href="{{ blog.url }}" class="article-template__return-btn button button--secondary button--outline">
                {% render 'icons-svg', icons: 'arrow-left' %}
                {{ 'blogs.article.back_to_blog' | t: title: blog.title }}
            </a>
        </div>
        {% if blog.previous_article or blog.next_article %}
            <div class="article_pagination previous-next">
                {% if blog.previous_article %}
                    <a
                        href="{{ blog.previous_article }}"
                        class="button article_pagination__prev button--secondary button--outline"
                    >
                        {% render 'icons-svg', icons: 'prev' %}
                        {{ 'blogs.article.previous_post' | t -}}
                    </a>
                {% endif %}
                {% if blog.next_article %}
                    <a
                        href="{{ blog.next_article }}"
                        class="button article_pagination__next button--secondary button--outline"
                    >
                        {{- 'blogs.article.next_post' | t }}
                        {% render 'icons-svg', icons: 'next' %}
                    </a>
                {% endif %}
            </div>
        {% endif %}
    </div>
    {%- if blog.comments_enabled? -%}
        <div class="article-template__comment-wrapper ">
            <div id="comments" class="article-template__comment-box container">
                {%- if article.comments_count > 0 -%}
                    {%- assign anchorId = '#Comments-' | append: article.id -%}

                    <h2 id="Comments-{{ article.id }}" tabindex="-1">
                        {{ 'blogs.article.comments' | t: count: article.comments_count }}
                    </h2>
                    {% paginate article.comments by 5 %}
                        <div class="article-template__comments">
                            {%- if comment.status == 'pending' and comment.content -%}
                                <article id="{{ comment.id }}" class="article-template__comments-comment">
                                    {{ comment.content }}
                                    <footer class="right">
                                        <span class="circle-divider caption-with-letter-spacing">
                                            {{- comment.author -}}
                                        </span>
                                    </footer>
                                </article>
                            {%- endif -%}

                            {%- for comment in article.comments -%}
                                <article id="{{ comment.id }}" class="article-template__comments-comment">
                                    {{ comment.content }}
                                    <footer>
                                        <span class="article-template__comments-name">
                                            {{- comment.author -}}</span
                                        ><span class="article-template__comments-date">
                                            {{- comment.created_at | time_tag: format: 'date' -}}
                                        </span>
                                    </footer>
                                </article>
                            {%- endfor -%}
                            {% render 'pagination', paginate: paginate, anchor: anchorId %}
                        </div>
                    {% endpaginate %}
                {%- endif -%}
                {% form 'new_comment', article %}
                    {%- liquid
                        assign post_message = 'blogs.article.success'
                        if blog.moderated? and comment.status == 'unapproved'
                            assign post_message = 'blogs.article.success_moderated'
                        endif
                    -%}

                    {%- if form.errors -%}
                        <div class="form__message" role="alert">
                            <h3 class="form-status error-message" tabindex="-1" autofocus>
                                {% render 'icon-error' %}
                                {{ 'templates.contact.form.error_heading' | t }}
                            </h3>
                        </div>
                    {%- elsif form.posted_successfully? -%}
                        <div class="form-status-list form__message" role="status">
                            <h3 class="form-status success-message" tabindex="-1" autofocus>
                                {% render 'icon-success' %}
                                {{ post_message | t }}
                            </h3>
                        </div>
                    {%- endif -%}
                    <h2>{{ 'blogs.article.comment_form_title' | t }}</h2>
                    <div
                        {% if blog.moderated? == false %}
                            class="article-template__comments-fields"
                        {% endif %}
                    >
                        <div class="article-template__comment-fields">
                            <div class="field field--with-error">
                                {% liquid
                                    assign mod_author_placeholder = 'blogs.article.name' | t | append: '*'
                                    assign mod_author_label = 'blogs.article.name' | t | append: '*'
                                    if form.errors contains 'author'
                                        assign mod_author_error = true
                                    else
                                        assign mod_author_error = false
                                    endif
                                %}

                                {% render 'input',
                                    mod_input_id: 'CommentForm-author',
                                    mod_input_name: 'comment[author]',
                                    mod_input_type: 'text',
                                    mod_input_label: mod_author_label,
                                    mod_custom_input_classes: 'field__input',
                                    mod_autocomplete: 'name',
                                    mod_input_placeholder: mod_author_placeholder,
                                    mod_is_required: false,
                                    mod_has_error: mod_author_error,
                                    mod_form: form,
                                    mod_value: form.author
                                %}
                                {%- if form.errors contains 'author' -%}
                                    <small id="CommentForm-author-error">
                                        <span class="form__message error-message error-message--input">
                                            {%- render 'icon-error' -%}
                                            {{ form.errors.messages.author }}.</span
                                        >
                                    </small>
                                {%- endif -%}
                            </div>
                            <div class="field field--with-error">
                                {% liquid
                                    assign mod_email_placeholder = 'blogs.article.email' | t | append: '*'
                                    assign mod_email_label = 'blogs.article.email' | t | append: '*'
                                    if form.errors contains 'email'
                                        assign mod_email_error = true
                                    else
                                        assign mod_email_error = false
                                    endif
                                %}

                                {% render 'input',
                                    mod_input_id: 'CommentForm-email',
                                    mod_input_name: 'comment[email]',
                                    mod_input_type: 'email',
                                    mod_input_label: mod_email_label,
                                    mod_custom_input_classes: 'field__input',
                                    mod_autocomplete: 'email',
                                    mod_input_placeholder: mod_email_placeholder,
                                    mod_is_required: false,
                                    mod_has_error: mod_email_error,
                                    mod_form: form,
                                    mod_value: form.email
                                %}
                                {%- if form.errors contains 'email' -%}
                                    <small id="CommentForm-email-error">
                                        <span class="form__message error-message error-message--input">
                                            {%- render 'icon-error' -%}
                                            {{ form.errors.messages.email }}.</span
                                        >
                                    </small>
                                {%- endif -%}
                            </div>
                        </div>
                        <div class="field field--with-error">
                            {% liquid
                                assign mod_body_placeholder = 'blogs.article.message' | t | append: '*'
                                assign mod_body_label = 'blogs.article.message' | t | append: '*'
                                if form.errors contains 'body'
                                    assign mod_body_error = true
                                else
                                    assign mod_body_error = false
                                endif
                            %}

                            {% render 'input',
                                mod_input_id: 'CommentForm-body',
                                mod_input_name: 'comment[body]',
                                mod_use_textarea: true,
                                mod_input_label: mod_body_label,
                                mod_custom_input_classes: 'text-area field__input',
                                mod_input_placeholder: mod_body_placeholder,
                                mod_is_required: false,
                                mod_has_error: mod_body_error,
                                mod_form: form,
                                mod_value: form.body
                            %}

                            {%- if form.errors contains 'body' -%}
                                <small id="CommentForm-body-error">
                                    <span class="form__message error-message error-message--input">
                                        {%- render 'icon-error' -%}
                                        {{ form.errors.messages.body }}.</span
                                    >
                                </small>
                            {%- endif -%}
                        </div>
                    </div>
                    {%- if blog.moderated? -%}
                        <p class="article-template__comment-warning caption">{{ 'blogs.article.moderated' | t }}</p>
                    {%- endif -%}
                    <input type="submit" class="button" value="{{ 'blogs.article.post' | t }}">
                {% endform %}
            </div>
        </div>
    {%- endif -%}
</article>

{% schema %}
{
    "name": "t:sections.main-article.name",
    "tag": "section",
    "class": "section",
    "settings": [
        {
            "type": "select",
            "id": "img_size",
            "label": "Image size",
            "options": [
                {
                    "value": "cropped",
                    "label": "Cropped"
                },
                {
                    "value": "landscape",
                    "label": "Landscape"
                },
                {
                    "value": "square",
                    "label": "Square"
                },
                {
                    "value": "portrait",
                    "label": "Portrait"
                }
            ]
        },
        {
            "type": "select",
            "id": "content_alignment",
            "options": [
                {
                    "value": "left",
                    "label": "Left"
                },
                {
                    "value": "center",
                    "label": "Center"
                },
                {
                    "value": "right",
                    "label": "Right"
                }
            ],
            "default": "left",
            "label": "Text alignment"
        },
        {
            "type": "paragraph",
            "content": "Style options"
        },
        {
            "type": "color",
            "id": "bg_color_content",
            "label": "Background color content"
        },
        {
            "type": "color",
            "id": "bg_color_comments",
            "label": "Background Color comments"
        },
        {
            "type": "color",
            "id": "title_color",
            "label": "Title color"
        },
        {
            "type": "color",
            "id": "text_color",
            "label": "Text color"
        },
        {
            "type": "checkbox",
            "id": "full_width",
            "default": false,
            "label": "Enabled full width?"
        },
        {
            "type": "range",
            "id": "width",
            "min": 1000,
            "max": 1800,
            "step": 40,
            "default": 1200,
            "unit": "px",
            "label": "Section Width"
        },
        {
            "type": "range",
            "id": "padding_top",
            "min": 0,
            "max": 60,
            "step": 5,
            "unit": "px",
            "label": "Padding top",
            "default": 30
        },
        {
            "type": "range",
            "id": "padding_bottom",
            "min": 0,
            "max": 60,
            "step": 5,
            "unit": "px",
            "label": "Padding bottom",
            "default": 30
        }
    ],
    "blocks": [
        {
            "type": "@app"
        },
        {
            "type": "featured_image",
            "name": "t:sections.main-article.blocks.featured_image.name",
            "limit": 1
        },
        {
            "type": "title",
            "name": "t:sections.main-article.blocks.title.name",
            "limit": 1,
            "settings": [
                {
                    "type": "checkbox",
                    "id": "blog_show_date",
                    "default": true,
                    "label": "t:sections.main-article.blocks.title.settings.blog_show_date.label"
                },
                {
                    "type": "checkbox",
                    "id": "blog_show_author",
                    "default": false,
                    "label": "t:sections.main-article.blocks.title.settings.blog_show_author.label"
                }
            ]
        },
        {
            "type": "content",
            "name": "t:sections.main-article.blocks.content.name",
            "limit": 1
        },
        {
            "type": "share",
            "name": "t:sections.main-article.blocks.share.name",
            "limit": 1
        }
    ]
}
{% endschema %}
